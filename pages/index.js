import axios from "axios";
import Head from "next/head";
import toast, { Toaster } from "react-hot-toast";
import { useState } from "react";
import styles from "../styles/Home.module.css";

export default function Home() {
  const [script, setScript] = useState("");
  const [inputData, setInputData] = useState();
  const [loading, setLoading] = useState(false);
  const [isCopied, setIsCopied] = useState(false);

  const config = {
    headers: { "content-type": "multipart/form-data" },
  };

  const onFileChange = (e) => {
    const formData = new FormData();
    formData.append("file", e.target.files[0]);
    setInputData(formData);
  };

  const makeTranscript = async (e) => {
    e.preventDefault();
    if (!inputData) {
      toast("Please upload an mp3 file first", {
        duraton: 5000,
        position: "top-center",
      });
    } else {
      setLoading(true);
      setScript("");
      const loadingToast = toast.loading(
        "Your script will be generated soon..."
      );
      const { data } = await axios.post("/api/transcribe", inputData, config);
      setScript(data.out);
      setLoading(false);
      toast.dismiss(loadingToast);
    }
  };

  const copyText = async () => {
    if ("clipboard" in navigator) {
      setIsCopied(true);
      return await navigator.clipboard.writeText(script);
    } else {
      setIsCopied(true);
      return document.execCommand("copy", true, script);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Toaster />
        <h1 className={styles.title}>Audio 2 Script</h1>
        <form className={styles.form} encType="multipart/form-data">
          <input
            disabled={loading}
            type="file"
            name="file"
            multiple={false}
            onChange={onFileChange}
            accept=".mp3"
          />
          <button disabled={loading} onClick={makeTranscript}>
            Transcribe
          </button>
        </form>
        <h2>Script:</h2>
        <p className={styles.response}>{script}</p>
        <button onClick={copyText}>
          <span>{isCopied ? "Copied!" : "Copy"}</span>
        </button>
      </main>
    </div>
  );
}
